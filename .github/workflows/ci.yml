name: CI

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - labeled
  push:
    branches:
      - main
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# Cancel any currently running workflows from the same PR, branch, or
# tag when a new workflow is triggered.
#
# https://stackoverflow.com/a/66336834
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

jobs:
  build-test:
    runs-on: ubuntu-latest
    outputs:
      upload-libs: ${{ steps.detect-changes.outputs.libs == 'true' }}

    steps:
      # === Setup ====
      - uses: actions/checkout@v4

      - name: mbedtls init
        run: git submodule update --init --recursive

      - uses: dtolnay/rust-toolchain@v1
        with:
          target: x86_64-unknown-linux-gnu
          toolchain: stable
          components: rust-src,rustfmt

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            ./
            xtask

      - name: Install Rust for Xtensa
        uses: esp-rs/xtensa-toolchain@v1.5
        with:
          ldproxy: true
          override: false

      # === Build libs ====
      - name: Detect esp-mbedtls-sys/ changes
        uses: dorny/paths-filter@v3
        id: detect-changes
        with:
          filters: |
            libs:
              - 'esp-mbedtls-sys/**'

      # https://github.com/esp-rs/xtensa-toolchain/issues/40
      - name: Install full Espressif LLVM installation
        if: |
          steps.detect-changes.outputs.libs == 'true' ||
          contains(github.event.pull_request.labels.*.name, 'rebuild-libs')
        run: $HOME/.cargo/bin/espup install -l debug --extended-llvm

      - name: Build libraries and bindings
        if: |
          steps.detect-changes.outputs.libs == 'true' ||
          contains(github.event.pull_request.labels.*.name, 'rebuild-libs')
        run: |
          rm -rf esp-mbedtls-sys/libs/*
          cargo +stable xtask gen

      # === Test ====
      # If the libs are rebuilt, the tests are executed against the new libraries,
      # else they get executed against the latest version in HEAD

      # Tests requires nightly riscv32imc-unknown-none-elf to be installed
      - uses: dtolnay/rust-toolchain@v1
        with:
          target: riscv32imc-unknown-none-elf
          toolchain: nightly
          components: rust-src,rustfmt
      - uses: extractions/setup-just@v1
        with:
          just-version: 1.13.0

      - name: check
        run: just

      - name: Upload libraries artifacts for commit
        if: |
          (steps.detect-changes.outputs.libs == 'true' &&
          github.ref == 'refs/heads/main') ||
          contains(github.event.pull_request.labels.*.name, 'rebuild-libs')
        uses: actions/upload-artifact@v4
        with:
          name: esp-mbedtls-sys
          retention-days: 1
          path: |
            esp-mbedtls-sys/libs
            esp-mbedtls-sys/src

  # If libraries are rebuilt and tests are successful, we upload them in a specific job
  # that has write access to prevent security breaches, and unwanted use of the token
  commit-libs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: build-test
    if: |
      (needs.build-test.outputs.upload-libs &&
      github.ref == 'refs/heads/main') ||
      contains(github.event.pull_request.labels.*.name, 'rebuild-libs')
    steps:
      - uses: actions/checkout@v4
        with:
          # In a pull request trigger, ref is required as GitHub Actions checks out in detached HEAD mode,
          # meaning it doesnâ€™t check out your branch by default.
          ref: ${{ github.head_ref }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: esp-mbedtls-sys
          # Required because else artifacts will be put into the base directory
          path: esp-mbedtls-sys/

      # Only push when on main, and tests are successful
      - name: Commit and push libraries on success
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add esp-mbedtls-sys/libs
          git add esp-mbedtls-sys/src
          git diff --cached --quiet || (
            git commit -m "chore: auto-push built libraries"
            git push
          )
